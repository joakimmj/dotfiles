[user]
    email = joakim+github@myrvoll.dev
    name = joakimmj
[core]
    editor = vim
    autocrlf = input
[rerere]
    enabled = true
[column]
    ui = auto
[branch]
    sort = -committerdate
[advice]
    addEmptyPathspec = false
[init]
    defaultBranch = main
[status]
    branch = true
    short = true
    showStash = true
    showUntrackedFiles = all
[blame]
    date = relative
    coloring = highlightRecent
    showEmail = true
[diff]
    context = 3
    renames = copies
    interHunkContext = 10
[format]
    pretty = %C(bold blue)%ae%C(reset) %C(green)%cr (%cs)%C(reset) %C(red)%d%C(reset) %n %C(yellow)%h%C(reset) %s
[commit]
    template = ~/.config/git/template
[push]
    autoSetupRemote = true
[rebase]
    autoSquash = true
    autoStash = true
[url "git@github.com:"]
    insteadOf = "gh:"
[url "git@github.com:joakimmj/"]
    insteadOf = "me:"
[alias]
    alias        = config --get-regexp alias                 # List all aliases
    blame-       = blame --color-line --color-by-age         # Blame
    blame-c      = blame -w -C -C -C --color-line --color-by-age # Blame (ignore whitespace and code moves) 
    changed      = whatchanged --since='2 weeks ago'         # Changes last two weeks
    cleanup      = git gc --prune=now --aggressive           # Cleanup local state
    discard      = checkout -p                               # Discard changes in patches
    discard-all  = checkout .                                # Discard all changes
    last         = log -1 HEAD                               # Show last commit
    last-3       = log -3 HEAD                               # Show last three commits
    push-f       = push --force-with-lease                   # Force push if your commit is latest
    reset-patch  = restore -p -s HEAD                        # Reset changes (patch version)
    staged       = diff --staged                             # Show staged changes
    unstage      = reset HEAD --                             # Unstage changes
    unstage-last = reset HEAD~                               # Unstage changes from last commit (used to undo/split commit)
    update       = remote update origin --prune              # Update remote info
    stash-untracked = "!f() {       \
        git stash -q;               \
        git stash -uq;              \
        git stash pop stash@{1} -q; \
        git add -A;                 \
        git status -sb;             \
    }; f"
    a           = add                                       # Add changes
    aa          = add -A                                    # Add all changes
    ap          = add -p                                    # Add changes in patches
    b           = branch                                    # List local branches
    ba          = branch -a                                 # List both remote-tracking branches and local branches.
    bd          = branch -d                                 # Delete a branch only if it has been merged
    bD          = branch -D                                 # Force delete a branch
    c           = commit -v                                 # Commit you changes (verbose)
    ca          = commit -v --amend                         # Amend commit to previous commit (verbose)
    co          = checkout                                  # Checkout a branch
    cob         = checkout -b                               # Checkout a new not yet existing branch
    cop         = checkout -                                # Checkout previous branch
    d           = diff                                      # Show unstaged changes
    dw          = diff --word-diff                          # Show unstaged changes (by word)
    ds          = diff --staged                             # Show staged changes
    dsw         = diff --staged --word-diff                 # Show staged changes (by word)
    l           = log --graph                               # Changelog
    ll          = log --graph --all                         # Changelog (all changes)
    ms          = maintenance start                         # Cron job that cleans repo (makes git faster)
    p           = pull                                      # Pull your changes to remote
    s           = status -sb                                # Show status (minified)
    ss          = status --show-stash                       # Show status
    st          = stash                                     # Stash changes
    stu         = stash -u                                  # Stash changes (also untracked)
    stus        = stash save --keep-index                   # Stash changes (unstaged)
    stp         = stash pop                                 # Pop stashed changes
    u           = remote update origin --prune              # Update remote info
